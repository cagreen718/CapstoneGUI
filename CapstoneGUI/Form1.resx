<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQH/2Q==
</value>
  </data>
</root>